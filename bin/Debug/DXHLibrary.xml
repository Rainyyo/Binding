<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DXHLibrary</name>
    </assembly>
    <members>
        <member name="T:DXH.Robot.DXHYAMAHALink">
            <summary>
            <para>版本1.1</para>
            <para>YAMAHA连接库</para>
            <para>支持批量读写YAMAHA机械手M点和P点</para>
            <para>读写需使用多线程，否则会导致接收卡顿</para>
            <para>使用步骤:new DXHYAMAHALink()->添加ConnectStateChanged事件->调用StartConnect()->使用RobotRead/RobotWrite</para>
            <para>适用于YAMAHA机械手    端口为502</para>
            <para>v1.10 根据YAMAHA机械手特性，增加不连续地址的MO读写</para>
            </summary>
        </member>
        <member name="F:DXH.Robot.DXHYAMAHALink.Protocol_Timeout">
            <summary>
            通信协议的超时时间
            </summary>
        </member>
        <member name="M:DXH.Robot.DXHYAMAHALink.#ctor(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            DXHYAMAHALink初始化函数，设置参数
            </summary>
            <param name="_RemoteIPAddress">要连接的目标远程IP地址</param>
            <param name="_RemoteIPPort">要连接的目标远程端口</param>
            <param name="_LocalIPAddress">Socket绑定的本地地址，默认值Any表示不绑定</param>
            <param name="_LocalIPPort">Socket绑定的本地端口,0表示不绑定</param>
            <param name="_ReceiveTimeout">TCP接收超时时间</param>
            <param name="_SendTimeout">TCP发送超时时间</param>
            <param name="_ReConnect">异常断开后自动重连选项</param>
            <param name="_Print">内部打印接收的数据选项(Console输出)</param>
        </member>
        <member name="M:DXH.Robot.DXHYAMAHALink.RobotReadM(System.Int32,System.Int32)">
            <summary>
            读YAMAHA机械手MO（连续地址批量读取）
            </summary>
            <param name="_M">起始MO地址</param>
            <param name="_Count">读取数</param>
            <returns>返回值MO状态</returns>
        </member>
        <member name="M:DXH.Robot.DXHYAMAHALink.RobotReadM(System.Int32[])">
            <summary>
            读YAMAHA机械手MO（可不连续地址）
            </summary>
            <param name="_M">指定MO地址列表，可以不连续</param>
            <returns>返回值MO状态</returns>
        </member>
        <member name="M:DXH.Robot.DXHYAMAHALink.RobotWriteM(System.Int32,System.Int32[])">
            <summary>
            写YAMAHA机械手MO（连续地址批量写入）
            </summary>
            <param name="_M">起始MO地址</param>
            <param name="_Values">写入值</param>
            <returns>返回值是否写入成功</returns>
        </member>
        <member name="M:DXH.Robot.DXHYAMAHALink.RobotWriteM(System.Int32[],System.Int32[])">
            <summary>
            写YAMAHA机械手MO（可不连续地址）
            </summary>
            <param name="_M">指定MO地址列表，可以不连续</param>
            <param name="_Values">对应MO地址列表的写入值</param>
            <returns>返回值是否写入成功</returns>
        </member>
        <member name="M:DXH.Robot.DXHYAMAHALink.RobotReadP(System.Int32)">
            <summary>
            读取机械手P点位
            </summary>
            <param name="_P">点位P地址</param>
            <returns>返回double[5]数组(0:X轴坐标;1:Y轴坐标;2:Z轴坐标;3:U轴坐标;4:左右手系统)</returns>
        </member>
        <member name="M:DXH.Robot.DXHYAMAHALink.RobotWriteP(System.Int32,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            写入机械手P点位
            </summary>
            <param name="_P">点位P地址</param>
            <param name="_X">X轴坐标</param>
            <param name="_Y">Y轴坐标</param>
            <param name="_Z">Z轴坐标</param>
            <param name="_U">U轴坐标</param>
            <param name="_Hand">机械手左右手系统(1:右手;2:左手)</param>
            <returns>返回值是否写入成功</returns>
        </member>
        <member name="T:DXH.Memory.DXHMemory">
            <summary>
            清理内存一键加速，其实没有作用，只是将内存写到虚拟内存中去了，软件反而会更卡
            </summary>
        </member>
        <member name="M:DXH.Memory.DXHMemory.ClearCurProcess">
            <summary>
            清理当前程序内存
            </summary>
        </member>
        <member name="M:DXH.Memory.DXHMemory.ClearAllProcess">
            <summary>
            清理所有程序内存
            </summary>
        </member>
        <member name="T:DXH.Modbus.DXHModbusASCII">
            <summary>
            <para>版本1.0</para>
            <para>ModbusASCII库</para>
            <para>只支持批量读写,功能码(读线圈:1,读寄存器:3)/功能码(写线圈:15,写寄存器:16)</para>
            <para>使用步骤:new DXHModbusASCII()->添加ConnectStateChanged/ModbusStateChanged事件->调用StartConnect()->使用ModbusRead/ModbusWrite</para>
            <para>适用于台达PLC  线圈起始地址2048，地址>1535时+43520/X起始地址+1024/Y起始地址+1280/S起始地址0  寄存器起始地址4096，地址>4095时+32768</para>
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusASCII.DXHSerial">
            <summary>
            连接用的串口
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusASCII.PortName">
            <summary>
            端口号,默认COM1
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusASCII.BaudRate">
            <summary>
            波特率,默认19200
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusASCII.Parity">
            <summary>
            校验位,默认偶校验
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusASCII.DataBits">
            <summary>
            数据位,默认8个数据位
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusASCII.StopBits">
            <summary>
            停止位,默认1个停止位
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusASCII.ReceiveTimeout">
            <summary>
            接收超时时间,默认值1000
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusASCII.SendTimeout">
            <summary>
            发送超时时间,默认值1000
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusASCII.Protocol_Timeout">
            <summary>
            通信协议的超时时间
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusASCII.ReConnect">
            <summary>
            异常断开后自动重连选项,默认值true
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusASCII.Print">
            <summary>
            内部打印接收的数据选项(Console输出),默认值false
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXHModbusASCII.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            DXHModbusASCII初始化函数,设置参数
            </summary>
            <param name="_PortName"></param>
            <param name="_BaudRate"></param>
            <param name="_Parity"></param>
            <param name="_DataBits"></param>
            <param name="_StopBits"></param>
            <param name="_ReceiveTimeout"></param>
            <param name="_SendTimeout"></param>
            <param name="_ReConnect"></param>
            <param name="_Print"></param>
        </member>
        <member name="F:DXH.Modbus.DXHModbusASCII.SerialLock">
            <summary>
            锁定线程用，供TCPSend方法使用，防止收发数据之前互相错乱
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusASCII.SerialRecLock">
            <summary>
            锁定线程用，防止判断连接状态时错乱
            </summary>
        </member>
        <member name="P:DXH.Modbus.DXHModbusASCII._ConnectState">
            <summary>
            连接状态 Idle Connecting Connected Faulted Closing Closed
            </summary>
        </member>
        <member name="P:DXH.Modbus.DXHModbusASCII._ModbusState">
            <summary>
            获取通信状态，true表示TCPSend有回应，false表示TCPSend无回应
            </summary>
        </member>
        <member name="E:DXH.Modbus.DXHModbusASCII.ConnectStateChanged">
            <summary>
            连接状态改变事件,判断网络连接状态
            </summary>
        </member>
        <member name="E:DXH.Modbus.DXHModbusASCII.ModbusStateChanged">
            <summary>
            通信状态改变事件,判断Modbus连接状态
            </summary>
        </member>
        <member name="P:DXH.Modbus.DXHModbusASCII.ConnectState">
            <summary>
            获取连接状态 Idle Connecting Connected Faulted Closing Closed 只读
            </summary>
        </member>
        <member name="P:DXH.Modbus.DXHModbusASCII.ModbusState">
            <summary>
            获取通信状态，true表示TCPSend有回应，false表示TCPSend无回应
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXHModbusASCII.StartConnect">
            <summary>
            开始连接，直到连接成功，设置ReConnect会在异常断开连接时主动重连
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXHModbusASCII.Close">
            <summary>
            关闭套接字，断开连接，不会主动重连
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXHModbusASCII.StartSerialCheck">
            <summary>
            开始检测串口连接,串口打开成功后自动开始
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXHModbusASCII.ModbusRead(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            ModbusASCII读取
            </summary>
            <param name="mDevIndex">站号</param>
            <param name="mFunction">功能码(读线圈:1,读寄存器:3)</param>
            <param name="mDevAdd">地址</param>
            <param name="mDataToRead">读取数</param>
            <returns></returns>
        </member>
        <member name="M:DXH.Modbus.DXHModbusASCII.ModbusWrite(System.Int32,System.Int32,System.Int32,System.Int32[])">
            <summary>
            Modbus写入
            </summary>
            <param name="mDevIndex">站号</param>
            <param name="mFunction">功能码(写线圈:15,写寄存器:16)</param>
            <param name="mDevAdd">地址</param>
            <param name="mDataToWrite">写入的数据集合</param>
            <returns>是否写入成功</returns>
        </member>
        <member name="T:DXH.Modbus.DXHModbusRTU">
            <summary>
            <para>版本1.0</para>
            <para>ModbusRTU库</para>
            <para>只支持批量读写,功能码(读线圈:1,读寄存器:3)/功能码(写线圈:15,写寄存器:16)</para>
            <para>使用步骤:new DXHModbusRTU()->添加ConnectStateChanged/ModbusStateChanged事件->调用StartConnect()->使用ModbusRead/ModbusWrite</para>
            <para>适用于信捷PLC  线圈起始地址0/X起始地址+16384/Y起始地址+18432/S起始地址+20480</para>
            <para>适用于合川PLC  线圈起始地址0，地址>=8000时-320/X起始地址+13312/Y起始地址+13056/S起始地址+8192</para>
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusRTU.DXHSerial">
            <summary>
            连接用的串口
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusRTU.PortName">
            <summary>
            端口号,默认COM1
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusRTU.BaudRate">
            <summary>
            波特率,默认19200
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusRTU.Parity">
            <summary>
            校验位,默认偶校验
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusRTU.DataBits">
            <summary>
            数据位,默认8个数据位
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusRTU.StopBits">
            <summary>
            停止位,默认1个停止位
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusRTU.ReceiveTimeout">
            <summary>
            接收超时时间,默认值1000
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusRTU.SendTimeout">
            <summary>
            发送超时时间,默认值1000
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusRTU.Protocol_Timeout">
            <summary>
            通信协议的超时时间
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusRTU.ReConnect">
            <summary>
            异常断开后自动重连选项,默认值true
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusRTU.Print">
            <summary>
            内部打印接收的数据选项(Console输出),默认值false
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXHModbusRTU.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            DXHModbusRTU初始化函数,设置参数
            </summary>
            <param name="_PortName"></param>
            <param name="_BaudRate"></param>
            <param name="_Parity"></param>
            <param name="_DataBits"></param>
            <param name="_StopBits"></param>
            <param name="_ReceiveTimeout"></param>
            <param name="_SendTimeout"></param>
            <param name="_ReConnect"></param>
            <param name="_Print"></param>
        </member>
        <member name="F:DXH.Modbus.DXHModbusRTU.SerialLock">
            <summary>
            锁定线程用，供TCPSend方法使用，防止收发数据之前互相错乱
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusRTU.SerialRecLock">
            <summary>
            锁定线程用，防止判断连接状态时错乱
            </summary>
        </member>
        <member name="P:DXH.Modbus.DXHModbusRTU._ConnectState">
            <summary>
            连接状态 Idle Connecting Connected Faulted Closing Closed
            </summary>
        </member>
        <member name="P:DXH.Modbus.DXHModbusRTU._ModbusState">
            <summary>
            获取通信状态，true表示TCPSend有回应，false表示TCPSend无回应
            </summary>
        </member>
        <member name="E:DXH.Modbus.DXHModbusRTU.ConnectStateChanged">
            <summary>
            连接状态改变事件,判断网络连接状态
            </summary>
        </member>
        <member name="E:DXH.Modbus.DXHModbusRTU.ModbusStateChanged">
            <summary>
            通信状态改变事件,判断Modbus连接状态
            </summary>
        </member>
        <member name="P:DXH.Modbus.DXHModbusRTU.ConnectState">
            <summary>
            获取连接状态 Idle Connecting Connected Faulted Closing Closed 只读
            </summary>
        </member>
        <member name="P:DXH.Modbus.DXHModbusRTU.ModbusState">
            <summary>
            获取通信状态，true表示TCPSend有回应，false表示TCPSend无回应
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXHModbusRTU.StartConnect">
            <summary>
            开始连接，直到连接成功，设置ReConnect会在异常断开连接时主动重连
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXHModbusRTU.Close">
            <summary>
            关闭套接字，断开连接，不会主动重连
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXHModbusRTU.StartSerialCheck">
            <summary>
            开始检测串口连接,串口打开成功后自动开始
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXHModbusRTU.ModbusRead(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            ModbusRTU读取
            </summary>
            <param name="mDevIndex">站号</param>
            <param name="mFunction">功能码(读线圈:1,读寄存器:3)</param>
            <param name="mDevAdd">地址</param>
            <param name="mDataToRead">读取数</param>
            <returns></returns>
        </member>
        <member name="M:DXH.Modbus.DXHModbusRTU.ModbusWrite(System.Int32,System.Int32,System.Int32,System.Int32[])">
            <summary>
            Modbus写入
            </summary>
            <param name="mDevIndex">站号</param>
            <param name="mFunction">功能码(写线圈:15,写寄存器:16)</param>
            <param name="mDevAdd">地址</param>
            <param name="mDataToWrite">写入的数据集合</param>
            <returns>是否写入成功</returns>
        </member>
        <member name="T:DXH.Modbus.DXH_Modbus">
            <summary>
            PLC连接通用类,ModbusRTU、ModbusASCII、ModbusTCP的基类
            </summary>
        </member>
        <member name="P:DXH.Modbus.DXH_Modbus.Link_Name">
            <summary>
            通信接口名称
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXH_Modbus.ReceiveTimeout">
            <summary>
            接收超时时间,默认值1000
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXH_Modbus.SendTimeout">
            <summary>
            发送超时时间,默认值1000
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXH_Modbus.Protocol_Timeout">
            <summary>
            通信协议的超时时间
            </summary>
        </member>
        <member name="E:DXH.Modbus.DXH_Modbus.ConnectStateChanged">
            <summary>
            通信接口连接状态改变事件
            </summary>
        </member>
        <member name="E:DXH.Modbus.DXH_Modbus.ModbusStateChanged">
            <summary>
            数据读写成功状态改变事件
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXH_Modbus.StartConnect">
            <summary>
            开始连接，直到连接成功，设置ReConnect会在异常断开连接时主动重连
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXH_Modbus.Close">
            <summary>
            关闭套接字或端口，断开连接，不会主动重连
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXH_Modbus.ModbusRead(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Modbus读取
            </summary>
            <param name="mDevIndex">站号</param>
            <param name="mFunction">功能码(读线圈:1,读寄存器:3)</param>
            <param name="mDevAdd">地址</param>
            <param name="mDataToRead">读取数</param>
            <param name="DWord">是否为双字</param>
            <returns></returns>
        </member>
        <member name="M:DXH.Modbus.DXH_Modbus.ModbusWrite(System.Int32,System.Int32,System.Int32,System.Int32[])">
            <summary>
            Modbus写入
            </summary>
            <param name="mDevIndex">站号</param>
            <param name="mFunction">功能码(写线圈:15,写寄存器:16)</param>
            <param name="mDevAdd">地址</param>
            <param name="mDataToWrite">写入的数据集合</param>
            <param name="DWord">是否为双字</param>
            <returns></returns>
        </member>
        <member name="M:DXH.Modbus.DXH_Modbus.ToDWord(System.Int32,System.Int32)">
            <summary>
            2个单字转双字，低位在前，高位在后
            </summary>
            <param name="_L">低位</param>
            <param name="_H">高位</param>
            <returns></returns>
        </member>
        <member name="M:DXH.Modbus.DXH_Modbus.ToWord(System.Int32)">
            <summary>
            双字转2个单字，低位在前，高位在后
            </summary>
            <param name="_DWord">双字</param>
            <returns></returns>
        </member>
        <member name="M:DXH.Modbus.DXH_Modbus.ToFloat(System.String)">
            <summary>
            16进制字符串8字节转Float
            </summary>
            <param name="_Hex"></param>
            <returns></returns>
        </member>
        <member name="M:DXH.Modbus.DXH_Modbus.ToHex(System.Single)">
            <summary>
            Float转16进制字符串8字节
            </summary>
            <param name="_Float"></param>
            <returns></returns>
        </member>
        <member name="T:DXH.Modbus.DXHModbusTCP">
            <summary>
            <para>版本1.20</para>
            <para>ModbusTCP库</para>
            <para>只支持批量读写,功能码(读线圈:1,读寄存器:3)/功能码(写线圈:15,写寄存器:16)</para>
            <para>使用步骤:new DXHModbusTCP()->添加ConnectStateChanged/ModbusStateChanged事件->调用StartConnect()->使用ModbusRead/ModbusWrite</para>
            <para>适用于三菱Fx5U PLC  线圈起始地址+8192</para>
            <para>适用于台达AS200/AS300</para>
            <para>适用于台达机械手    站号为2</para>
            <para>V1.10 统一了Modbus函数名</para>
            <para>V1.20 优化连接,防止连接成功后瞬间被断开却显示连接成功的BUG</para>
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusTCP.DXHSocket">
            <summary>
            ModbusTCP连接用的套接字
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusTCP.RemoteIPAddress">
            <summary>
            ModbusTCP主站IP地址,默认值LocalHost,表示本地地址
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusTCP.RemoteIPPort">
            <summary>
            ModbusTCP主站端口,默认值502
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusTCP.LocalIPAddress">
            <summary>
            Socket绑定的本地地址，默认值Any表示不绑定
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusTCP.LocalIPPort">
            <summary>
            Socket绑定的本地端口,默认值0表示不绑定
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusTCP.ReceiveTimeout">
            <summary>
            接收超时时间,默认值1000
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusTCP.SendTimeout">
            <summary>
            发送超时时间,默认值1000
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusTCP.Protocol_Timeout">
            <summary>
            通信协议的超时时间
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusTCP.ReConnect">
            <summary>
            异常断开后自动重连选项,默认值true
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusTCP.Print">
            <summary>
            内部打印接收的数据选项(Console输出),默认值false
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXHModbusTCP.#ctor(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            DXHModbusTCP初始化函数，设置参数
            </summary>
            <param name="_RemoteIPAddress">ModbusTCP主站IP地址</param>
            <param name="_RemoteIPPort">ModbusTCP主站端口</param>
            <param name="_LocalIPAddress">Socket绑定的本地地址，Any表示不绑定</param>
            <param name="_LocalIPPort">Socket绑定的本地端口,0表示不绑定</param>
            <param name="_ReceiveTimeout">接收超时时间</param>
            <param name="_SendTimeout">发送超时时间</param>
            <param name="_ReConnect">异常断开后自动重连选项</param>
            <param name="_Print">内部打印接收的数据选项(Console输出)</param>
        </member>
        <member name="F:DXH.Modbus.DXHModbusTCP.TCPLock">
            <summary>
            锁定线程用，供TCPSend方法使用，防止收发数据之前互相错乱
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusTCP.TCPRecLock">
            <summary>
            锁定线程用，防止判断连接状态时错乱
            </summary>
        </member>
        <member name="F:DXH.Modbus.DXHModbusTCP.TCPRecStr">
            <summary>
            接收缓冲区转成的字符串
            </summary>
        </member>
        <member name="P:DXH.Modbus.DXHModbusTCP._ConnectState">
            <summary>
            连接状态 Idle Connecting Connected Faulted Closing Closed
            </summary>
        </member>
        <member name="P:DXH.Modbus.DXHModbusTCP._ModbusState">
            <summary>
            获取Modbus通信状态，true表示Modbus有回应，false表示Modbus无回应
            </summary>
        </member>
        <member name="E:DXH.Modbus.DXHModbusTCP.ConnectStateChanged">
            <summary>
            连接状态改变事件,判断网络连接状态
            </summary>
        </member>
        <member name="E:DXH.Modbus.DXHModbusTCP.ModbusStateChanged">
            <summary>
            通信状态改变事件,判断Modbus连接状态
            </summary>
        </member>
        <member name="P:DXH.Modbus.DXHModbusTCP.ConnectState">
            <summary>
            获取连接状态 Idle Connecting Connected Faulted Closing Closed 只读
            </summary>
        </member>
        <member name="P:DXH.Modbus.DXHModbusTCP.ModbusState">
            <summary>
            获取通信状态，true表示TCPSend有回应，false表示TCPSend无回应
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXHModbusTCP.SetKeepAlive(System.Int32,System.Int32,System.Int32)">
            <summary>
            通过低级操作模式，关闭套接字的保持连接功能，让TCP在异常断开时短时间内尝试重连然后立刻断开，解决了拔网线等连接不断开的问题
            </summary>
            <param name="KeepAlive"></param>
            <param name="KeepAliveTime"></param>
            <param name="KeepAliveInterval"></param>
        </member>
        <member name="M:DXH.Modbus.DXHModbusTCP.StartConnect">
            <summary>
            开始连接，直到连接成功，设置ReConnect会在异常断开连接时主动重连
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXHModbusTCP.Close">
            <summary>
            关闭套接字，断开连接，不会主动重连
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXHModbusTCP.StartTCPReceive">
            <summary>
            开始接收数据，连接成功后自动开始
            </summary>
        </member>
        <member name="M:DXH.Modbus.DXHModbusTCP.ModbusRead(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            ModbusTCP读取
            </summary>
            <param name="mDevIndex">站号</param>
            <param name="mFunction">功能码(读线圈:1,读寄存器:3)</param>
            <param name="mDevAdd">地址</param>
            <param name="mDataToRead">读取数</param>
            <returns></returns>
        </member>
        <member name="M:DXH.Modbus.DXHModbusTCP.ModbusWrite(System.Int32,System.Int32,System.Int32,System.Int32[])">
            <summary>
            Modbus写入
            </summary>
            <param name="mDevIndex">站号</param>
            <param name="mFunction">功能码(写线圈:15,写寄存器:16)</param>
            <param name="mDevAdd">地址</param>
            <param name="mDataToWrite">写入的数据集合</param>
            <returns></returns>
        </member>
        <member name="T:DXH.PLC.Panasonic_Mewtocol">
            <summary>
            松下的Computer Link功能 MEWTOCOL-COM 协议
            </summary>
        </member>
        <member name="T:DXH.PLC.FX3u_ModbusRTU">
            <summary>
            三菱FX3u\FX3uc和合川PLC
            </summary>
        </member>
        <member name="M:DXH.PLC.FX3u_ModbusRTU.UpdateSerial(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
            <summary>
            更新串口设置
            </summary>
            <param name="PortName"></param>
            <param name="BaudRate"></param>
            <param name="Parity"></param>
            <param name="DataBits"></param>
            <param name="StopBits"></param>
        </member>
        <member name="M:DXH.PLC.Xinjie_ModbushRTU.UpdateSerial(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
            <summary>
            更新串口设置
            </summary>
            <param name="PortName"></param>
            <param name="BaudRate"></param>
            <param name="Parity"></param>
            <param name="DataBits"></param>
            <param name="StopBits"></param>
        </member>
        <member name="T:DXH.Scan.KeyenceSerial">
            <summary>
            基恩士扫码枪使用库
            v1.34 取消ReadTo回车，自动去除回车字符
            </summary>
        </member>
        <member name="F:DXH.Scan.KeyenceSerial.START_DECODE">
            <summary>
            开始扫码信号
            </summary>
        </member>
        <member name="F:DXH.Scan.KeyenceSerial.STOP_DECODE">
            <summary>
            结束扫码信号
            </summary>
        </member>
        <member name="M:DXH.Scan.KeyenceSerial.GetBarCode(DXH.Scan.KeyenceSerial.ProcessDelegate,System.Int32)">
            <summary>
            异步扫码
            </summary>
            <param name="CallBack">异步执行完成后的回调函数ProcessDelegate(string barcode)</param>
            <param name="_TimeOut">超时时间</param>
        </member>
        <member name="M:DXH.Scan.KeyenceSerial.GetBarcode(System.Int32)">
            <summary>
            同步扫码
            </summary>
            <param name="_TimeOut">扫码超时时间</param>
            <returns></returns>
        </member>
        <member name="T:DXH.Scan.InfoscanSerial">
            <summary>
            Infoscan扫码枪库
            v1.34 自动去除回车字符
            </summary>
        </member>
        <member name="M:DXH.Scan.InfoscanSerial.UpdateSerial(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
            <summary>
            更新串口设置
            </summary>
            <param name="PortName"></param>
            <param name="BaudRate"></param>
            <param name="Parity"></param>
            <param name="DataBits"></param>
            <param name="StopBits"></param>
        </member>
        <member name="F:DXH.Scan.InfoscanSerial.START_DECODE">
            <summary>
            开始扫码指令
            </summary>
        </member>
        <member name="F:DXH.Scan.InfoscanSerial.STOP_DECODE">
            <summary>
            结束扫码指令
            </summary>
        </member>
        <member name="M:DXH.Scan.InfoscanSerial.GetBarCode(DXH.Scan.InfoscanSerial.ProcessDelegate,System.Int32)">
            <summary>
            异步扫码
            </summary>
            <param name="CallBack">异步执行完成后的回调函数ProcessDelegate(string barcode)</param>
            <param name="_TimeOut">超时时间</param>
        </member>
        <member name="M:DXH.Scan.InfoscanSerial.GetBarcode(System.Int32)">
            <summary>
            同步扫码
            </summary>
            <param name="_TimeOut">扫码超时时间</param>
            <returns></returns>
        </member>
        <member name="T:DXH.View.DXHConsole">
            <summary>
            <para>版本1.1</para>
            <para>控制台小窗口，打印字符过多会卡死~打印cls字符可清空内容，或设置MaxLine</para>
            </summary>
            <summary>
            DXHConsole
            </summary>
        </member>
        <member name="M:DXH.View.DXHConsole.#ctor">
            <summary>
            控制台小窗口，打印字符过多会卡死~打印cls字符可清空内容，或设置MaxLine
            </summary>
        </member>
        <member name="P:DXH.View.DXHConsole.MaxLine">
            <summary>
            窗口最多可显示打印次数，超过即清空，默认50行
            </summary>
        </member>
        <member name="M:DXH.View.DXHConsole.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DXH.DTC.OMRON_DTC_ModbusRTU">
            <summary>
            欧姆龙温控器库
            </summary>
        </member>
        <member name="M:DXH.DTC.OMRON_DTC_ModbusRTU.UpdateSerial(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
            <summary>
            更新串口设置
            </summary>
            <param name="PortName"></param>
            <param name="BaudRate"></param>
            <param name="Parity"></param>
            <param name="DataBits"></param>
            <param name="StopBits"></param>
        </member>
        <member name="F:DXH.Net.DXHUDPClient.NewLine">
            <summary>
            接收数据是否回车结尾,默认false，true：接收的数据累加到回车符才返回；false：接收到数据立即返回
            </summary>
        </member>
        <member name="F:DXH.Net.DXHUDPClient.PortLimit">
            <summary>
            接收数据是否限制远程端口
            </summary>
        </member>
        <member name="F:DXH.Net.DXHUDPClient.IPAddressLimit">
            <summary>
            接收数据是否限制远程IP地址
            </summary>
        </member>
        <member name="F:DXH.Net.DXHUDPClient.Print">
            <summary>
            是否打印数据
            </summary>
        </member>
        <member name="T:DXH.Net.DXHTCPClient">
            <summary>
            <para>版本1.40</para>
            <para>TCP客户端类，使用Socket方法</para>
            <para>可设置本地固定端口和远程IP和端口</para>
            <para>TCPSend方法可实现发送等待回应的一发一收功能，也可以发送后不等待回应</para>
            <para>ConnectState表示当前连接的状态</para>
            <para>TCPSendState表示发送等待回应的状态，没有回应或超时就为Fasle</para>
            <para>TCP接收使用多线程，但是接收事件会回到主线程，如果主线程堵塞会导致接收异常</para>
            <para>v1.10 修复tcpsend异步时会返回空字符的BUG</para>
            <para>v1.20 修复了连接断开后Received事件会传递上一次接收的数据的BUG</para>
            <para>v1.30 修改了连接未断开时调用StartTCPConnect导致连接不可用的BUG</para>
            <para>v1.31 添加了 Send_Delay：TCPSend前等待和 Receive_Delay：TCPSend后等待</para>
            <para>V1.32 添加了ReadFrom和ReadTo参数（NewLine设为True时优先于ReadTo处理，可以ReadTo=\r\n）</para>
            <para>V1.33 修复了ReadTo和NewLine参数都为空时，总是TimeOut的BUG</para>
            <para>V1.40 优化连接,防止连接成功后瞬间被断开却显示连接成功的BUG</para>
            <para>V1.50 增加字符编码Encode修改功能，默认UTF-8编码</para>
            <para>编写：丁晓函</para>
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.DXHSocket">
            <summary>
            连接用的套接字
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.RemoteIPAddress">
            <summary>
            要连接的目标远程IP地址
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.RemoteIPPort">
            <summary>
            要连接的目标远程端口
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.LocalIPAddress">
            <summary>
            Socket绑定的本地地址，默认值Any表示不绑定
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.LocalIPPort">
            <summary>
            绑定的本地端口,0表示不绑定
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.ReceiveTimeout">
            <summary>
            接收超时时间
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.SendTimeout">
            <summary>
            发送超时时间
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.ReConnect">
            <summary>
            异常断开后是否自动重连
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.Print">
            <summary>
            是否内部打印接收的数据(Console输出)
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.NewLine">
            <summary>
            指示接收的数据是否必须回车结尾,默认false，true：接收的数据累加到回车符才返回；false：接收到数据立即返回
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.ReadFrom">
            <summary>
            指示接收的数据是否必须以指定的字符串开始
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.ReadTo">
            <summary>
            指示接收的数据是否必须以指定的字符串结尾，可以与NewLine同时生效。。
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.Encode">
            <summary>
            接收发送数据使用的字符编码
            </summary>
        </member>
        <member name="M:DXH.Net.DXHTCPClient.#ctor(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            DXHTCPClient初始化函数，设置参数
            </summary>
            <param name="_RemoteIPAddress">要连接的目标远程IP地址</param>
            <param name="_RemoteIPPort">要连接的目标远程端口</param>
            <param name="_LocalIPAddress">Socket绑定的本地地址，默认值Any表示不绑定</param>
            <param name="_LocalIPPort">Socket绑定的本地端口,0表示不绑定</param>
            <param name="_ReceiveTimeout">接收超时时间</param>
            <param name="_SendTimeout">发送超时时间</param>
            <param name="_ReConnect">异常断开后自动重连选项</param>
            <param name="_Print">内部打印接收的数据选项(Console输出)</param>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.Pause_Event">
            <summary>
            阻塞线程用，供TCPSend方法使用，用于一发一收
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.TCPLock">
            <summary>
            锁定线程用，供TCPSend方法使用，防止收发数据之前互相错乱
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.TCPRecStr">
            <summary>
            接收缓冲区转成的字符串
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.TotalRec">
            <summary>
            每次累积接收的字符串,在发送前和判定后清空
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPClient.OneRec">
            <summary>
            接收的最终一次数据
            </summary>
        </member>
        <member name="P:DXH.Net.DXHTCPClient._ConnectState">
            <summary>
            连接状态 Idle Connecting Connected Faulted Closing Closed
            </summary>
        </member>
        <member name="P:DXH.Net.DXHTCPClient._TCPSendState">
            <summary>
            获取通信状态，true表示TCPSend有回应，false表示TCPSend无回应
            </summary>
        </member>
        <member name="E:DXH.Net.DXHTCPClient.Received">
            <summary>
            接收到一次数据的事件
            </summary>
        </member>
        <member name="E:DXH.Net.DXHTCPClient.ConnectStateChanged">
            <summary>
            连接状态改变事件
            </summary>
        </member>
        <member name="E:DXH.Net.DXHTCPClient.TCPSendStateChanged">
            <summary>
            通信状态改变事件
            </summary>
        </member>
        <member name="P:DXH.Net.DXHTCPClient.ConnectState">
            <summary>
            获取连接状态 Idle Connecting Connected Faulted Closing Closed 只读
            </summary>
        </member>
        <member name="P:DXH.Net.DXHTCPClient.TCPSendState">
            <summary>
            获取通信状态，true表示TCPSend有回应，false表示TCPSend无回应
            </summary>
        </member>
        <member name="M:DXH.Net.DXHTCPClient.OnReceived(System.String)">
            <summary>
            Received事件的小封装
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:DXH.Net.DXHTCPClient.SetKeepAlive(System.Int32,System.Int32,System.Int32)">
            <summary>
            通过低级操作模式，关闭套接字的保持连接功能，让TCP在异常断开时短时间内尝试重连然后立刻断开，解决了拔网线等连接不断开的问题
            </summary>
            <param name="KeepAlive"></param>
            <param name="KeepAliveTime"></param>
            <param name="KeepAliveInterval"></param>
        </member>
        <member name="M:DXH.Net.DXHTCPClient.StartTCPConnect">
            <summary>
            开始连接，直到连接成功，设置ReConnect会在异常断开连接时主动重连
            </summary>
        </member>
        <member name="M:DXH.Net.DXHTCPClient.Close">
            <summary>
            关闭套接字，断开连接，不会主动重连
            </summary>
        </member>
        <member name="M:DXH.Net.DXHTCPClient.StartTCPReceive">
            <summary>
            开始接收数据，连接成功后自动开始
            </summary>
        </member>
        <member name="M:DXH.Net.DXHTCPClient.TCPSend(System.String,System.Boolean,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            同步线程发送数据给服务端，并返回服务端回复的字符串
            </summary>
            <param name="StrToSend">待发送的字符串</param>
            <param name="Wait">是否等待服务端回复，默认等待</param>
            <param name="WaitTimeout">等待服务端回复的时间，默认1000ms</param>
            <param name="_ReadFrom">从指定的字符串开始接收</param>
            <param name="_ReadTo">到指定的字符串结束接收</param>
            <param name="_Send_Delay">发送数据前等待,默认0ms,可以排除发送前等待时间内的数据</param>
            <param name="_Receive_Delay">收到数据后等待,默认0ms,可以额外接收等待时间内的数据</param>
            <returns>返回服务端回复的字符串</returns>
        </member>
        <member name="M:DXH.Net.DXHTCPClient.TCPSendAsync(System.String,System.Boolean,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            异步线程发送数据给服务端，并返回服务端回复的字符串
            </summary>
            <param name="StrToSend">待发送的字符串</param>
            <param name="Wait">是否等待服务端回复，默认等待</param>
            <param name="WaitTimeout">等待服务端回复的时间，默认1000ms</param>
            <param name="_ReadFrom">从指定的字符串开始接收</param>
            <param name="_ReadTo">到指定的字符串结束接收</param>
            <param name="_Send_Delay">发送数据前等待,默认0ms,可以排除发送前等待时间内的数据</param>
            <param name="_Receive_Delay">收到数据后等待,默认0ms,可以额外接收等待时间内的数据</param>
            <returns>返回服务端回复的字符串</returns>
        </member>
        <member name="F:DXH.Net.DXHTCPServer.DXHSocket">
            <summary>
            连接用的套接字
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPServer.LocalIPAddress">
            <summary>
            侦听用的本地IP地址
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPServer.LocalIPPort">
            <summary>
            侦听用的本地IP端口
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPServer.ReceiveTimeout">
            <summary>
            接收超时时间
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPServer.SendTimeout">
            <summary>
            发送超时时间
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPServer.NewLine">
            <summary>
            接收数据是否回车结尾,默认false，true：接收的数据累加到回车符才返回；false：接收到数据立即返回
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPServer.Print">
            <summary>
            是否内部打印接收的数据(Console输出)
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPServer.SocketList">
            <summary>
            当前已连接的所有Socket列表
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPServer.Pause_Event">
            <summary>
            阻塞线程用，供TCPSend方法使用，用于一发一收
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPServer.TCPLock">
            <summary>
            锁定线程用，供TCPSend方法使用，防止收发数据之前互相错乱
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPServer.TCPRecStr">
            <summary>
            接收缓冲区转成的字符串
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPServer.ToLine">
            <summary>
            接收的字符串累加用判定回车的中间变量
            </summary>
        </member>
        <member name="F:DXH.Net.DXHTCPServer.OneRec">
            <summary>
            接收的最终一次数据
            </summary>
        </member>
        <member name="P:DXH.Net.DXHTCPServer._ConnectState">
            <summary>
            连接状态 Idle Listening Error Closing Closed
            </summary>
        </member>
        <member name="P:DXH.Net.DXHTCPServer._TCPSendState">
            <summary>
            获取通信状态，true表示TCPSend有回应，false表示TCPSend无回应
            </summary>
        </member>
        <member name="E:DXH.Net.DXHTCPServer.Received">
            <summary>
            接收到一次数据的事件,sender:连接的Socket对象，e:接收的字符串
            </summary>
        </member>
        <member name="E:DXH.Net.DXHTCPServer.SocketListChanged">
            <summary>
            连接Socket列表改变事件，sender:改变的Socket对象，e:true表示新的连接，false表示旧的断开
            </summary>
        </member>
        <member name="E:DXH.Net.DXHTCPServer.ConnectStateChanged">
            <summary>
            连接状态改变事件
            </summary>
        </member>
        <member name="E:DXH.Net.DXHTCPServer.TCPSendStateChanged">
            <summary>
            通信状态改变事件
            </summary>
        </member>
        <member name="P:DXH.Net.DXHTCPServer.ConnectState">
            <summary>
            获取连接状态 Idle Listening Error Closing Closed 只读
            </summary>
        </member>
        <member name="P:DXH.Net.DXHTCPServer.TCPSendState">
            <summary>
            获取通信状态，true表示TCPSend有回应，false表示TCPSend无回应
            </summary>
        </member>
        <member name="M:DXH.Net.DXHTCPServer.SetKeepAlive(System.Int32,System.Int32,System.Int32)">
            <summary>
            通过低级操作模式，关闭套接字的保存连接功能
            </summary>
            <param name="KeepAlive"></param>
            <param name="KeepAliveTime"></param>
            <param name="KeepAliveInterval"></param>
        </member>
        <member name="M:DXH.Net.DXHTCPServer.StartTCPListen">
            <summary>
            开始TCP侦听
            </summary>
        </member>
        <member name="M:DXH.Net.DXHTCPServer.Close">
            <summary>
            关闭套接字，断开连接，不会主动重连
            </summary>
        </member>
        <member name="M:DXH.Net.DXHTCPServer.StartTCPReceice(System.Net.Sockets.Socket)">
            <summary>
            开始接收数据，连接成功后自动开始
            </summary>
            <param name="AcceptSocket">指定的客户端连接</param>
        </member>
        <member name="M:DXH.Net.DXHTCPServer.TCPSend(System.Net.Sockets.Socket,System.String,System.Boolean,System.Int32)">
            <summary>
            发送数据给客户端，并返回客户端回复的字符串
            </summary>
            <param name="AcceptSocket">指定的客户端连接</param>
            <param name="StrToSend">待发送的字符串</param>
            <param name="Wait">是否等待客户端回复，默认等待</param>
            <param name="WaitTimeout">等待客户端回复的时间，默认1000ms</param>
            <returns>返回客户端回复的字符串</returns>
        </member>
        <member name="T:DXH.MyLog.MyTraceListener">
            <summary>
            在项目的App.config文件里添加
            </summary>
        </member>
        <member name="M:DXH.ViewModel.RelayCommand.#ctor(System.Action{System.Object})">
            <summary>
            Creates a new command that can always execute.
            </summary>
            <param name="execute">The execution logic.</param>
        </member>
        <member name="M:DXH.ViewModel.RelayCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
            <summary>
            Creates a new command.
            </summary>
            <param name="execute">The execution logic.</param>
            <param name="canExecute">The execution status logic.</param>
        </member>
        <member name="T:DXH.WPF.DXHWPF">
            <summary>
            WPF的一些功能
            </summary>
        </member>
        <member name="M:DXH.WPF.DXHWPF.DoEvents">
            <summary>
            立即刷新界面
            </summary>
        </member>
        <member name="M:DXH.WPF.DXHWPF.ExitFrame(System.Object)">
            <summary>
            
            </summary>
            <param name="f"></param>
            <returns></returns>
        </member>
    </members>
</doc>
